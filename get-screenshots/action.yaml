name: Get screenshots
description: Install a snap in a VM and get screenshots of it running
author: Snapcrafters
branding:
  icon: camera
  color: orange

inputs:
  issue-number:
    description: "The issue number to post the screenshots into"
    required: true
  ci-repo:
    description: "The repo to fetch tools/templates from. Only for debugging."
    default: "snapcrafters/ci"
    required: false
  channel:
    description: "The channel to publish the snap to"
    default: "candidate"
    required: false
  github-token:
    description: "A token with permissions to comment on issues"
    required: true
  snapcraft-yaml-path:
    description: "Custom path to snapcraft.yaml for when it is not in the default location."
    required: false
  screenshots-repo:
    description: "The repository where screenshots should be uploaded."
    default: "snapcrafters/ci-screenshots"
    required: false
  screenshots-token:
    description: "A token with permissions to commit files to the screenshots repo"
    required: true

outputs:
  screen:
    description: "URL to a screenshot of the full screen of the VM"
    value: ${{ steps.screenshots.outputs.screen }}
  window:
    description: "URL to a screenshot of the full screen of the VM"
    value: ${{ steps.screenshots.outputs.window }}

runs:
  using: composite
  steps:
    - name: Checkout the code
      uses: actions/checkout@v4

    - name: Setup ghvmctl
      uses: snapcrafters/ci/setup-ghvmctl@main

    - name: Download manifest files (if available)
      continue-on-error: true
      uses: actions/download-artifact@v3
      with:
        name: manifests

    - name: Find the snapcraft.yaml path
      id: yaml-path
      shell: bash
      run: |
        if [[ -n "${{ inputs.snapcraft-yaml-path }}" ]]; then
          yaml_path="${{ inputs.snapcraft-yaml-path }}"
        else
          snapcraft_yaml_paths=(
            "snap/snapcraft.yaml"
            "snapcraft.yaml"
            "build-aux/snap/snapcraft.yaml"
            ".snapcraft.yaml"
          )
          
          for file in "${snapcraft_yaml_paths[@]}"; do
              if [[ -f "$file" ]]; then
                  yaml_path="$file"
              fi
          done
        fi
        if [[ ! -n "${yaml-path}" ]]; then
           echo "No snapcraft.yaml found" >2
           exit 1
        fi
        echo "yaml-path=${yaml_path}" >> "$GITHUB_OUTPUT"
        echo "snap-name=$(yq -r '.name' "$yaml_path")" >> "$GITHUB_OUTPUT"

    - name: Prepare VM
      shell: bash
      env:
        snap_name: ${{ steps.yaml-path.outputs.snap-name }}
      run: |
        ghvmctl prepare

        # If we got a manifest file then parse the revision from it
        if ls manifest-amd64.yaml &>/dev/null; then
          rev="$(cat manifest-amd64.yaml | yq -r '.revision')"
          echo "Installing snap revision '${rev}' from build manifest"
          ghvmctl install-snap "${snap_name}" --revision "${rev}"
        else
          echo "Installing snap from 'latest/${{ inputs.channel}}'"
          ghvmctl install-snap "${snap_name}" --channel "latest/${{ inputs.channel }}"
        fi

        ghvmctl run-snap "${snap_name}"
        sleep 60

    - name: Gather screenshots
      shell: bash
      run: |
        ghvmctl screenshot-full
        ghvmctl screenshot-window

    - name: Output application logs
      shell: bash
      env:
        snap_name: ${{ steps.yaml-path.outputs.snap-name }}
      run: |
        ghvmctl exec "cat /home/ubuntu/${snap_name}.log"

    - name: Checkout screenshots repo
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.screenshots-repo }}
        path: ci-screenshots
        token: ${{ inputs.screenshots-token }}

    - name: Upload screenshots to screenshots repo
      shell: bash
      id: screenshots
      env:
        snap_name: ${{ steps.yaml-path.outputs.snap-name }}
      run: |
        file_prefix="$(date +%Y%m%d)-${snap_name}-${{ inputs.issue-number }}"

        pushd ci-screenshots
        mv "$HOME/ghvmctl-screenshots/screenshot-screen.png" "${file_prefix}-screen.png"
        mv "$HOME/ghvmctl-screenshots/screenshot-window.png" "${file_prefix}-window.png"

        git config --global user.email "merlijn.sebrechts+snapcrafters-bot@gmail.com"
        git config --global user.name "Snapcrafters Bot"

        git add -A .
        git commit -m "data: screenshots for snapcrafters/${snap_name}#${{ inputs.issue-number }}"
        git push origin main

        echo "screen=https://raw.githubusercontent.com/${{ inputs.screenshots-repo }}/main/${file_prefix}-screen.png" >> "$GITHUB_OUTPUT"
        echo "window=https://raw.githubusercontent.com/${{ inputs.screenshots-repo }}/main/${file_prefix}-window.png" >> "$GITHUB_OUTPUT"

    - name: Comment on call for testing issue with screenshots
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: ${{ inputs.issue-number }},
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `The following screenshots were taken during automated testing:

            ![window](${{ steps.screenshots.outputs.window }})

            ![screen](${{ steps.screenshots.outputs.screen }})
            `
          })
