name: Get Architectures
description: Get the architectures supported by a given snap
author: Snapcrafters
branding:
  icon: code
  color: orange

inputs:
  snapcraft-yaml-path:
    description: "Custom path to snapcraft.yaml for when it is not in the default location."
    required: false

outputs:
  architectures:
    description: "A space-separated list of architectures supported by the snap"
    value: ${{ steps.architectures.outputs.architectures }}
  architectures-list:
    description: "A JSON list of architectures supported by the snap"
    value: ${{ steps.architectures.outputs.architectures_list }}

runs:
  using: composite
  steps:
    - name: Checkout the source
      uses: actions/checkout@v4

    - name: Find the snapcraft.yaml path
      id: yaml-path
      shell: bash
      run: |
        if [[ -n "${{ inputs.snapcraft-yaml-path }}" ]]; then
          yaml_path="${{ inputs.snapcraft-yaml-path }}"
        else
          snapcraft_yaml_paths=(
            "snap/snapcraft.yaml"
            "snapcraft.yaml"
            "build-aux/snap/snapcraft.yaml"
            ".snapcraft.yaml"
          )
          
          for file in "${snapcraft_yaml_paths[@]}"; do
              if [[ -f "$file" ]]; then
                  yaml_path="$file"
              fi
          done
        fi
        if [[ -z "${yaml_path}" ]]; then
           echo "No snapcraft.yaml found"
           exit 1
        fi
        echo "yaml-path=${yaml_path}" >> "$GITHUB_OUTPUT"
        echo "snap-name=$(yq -r '.name' "$yaml_path")" >> "$GITHUB_OUTPUT"

    - name: Compute architectures
      id: architectures
      shell: bash
      env:
        yaml_path: ${{ steps.yaml-path.outputs.yaml-path }}
      run: |
        # Get the list as a json array. E.g. ["amd64", "arm64"]
        architectures_list="$(yq -r -I=0 -o=json '[.architectures[]]' | "$yaml_path")"

        # Get the list as a space-separated string. E.g. "amd64" "arm64"
        architectures="$(yq -r -I=0 -o=csv '[.architectures[]]' "$yaml_path" | tr ',' ' ')"

        # Handle the case where architectures is a list of objects
        if echo "$architectures" | grep -q "build-on"; then
            architectures_list="$(yq -r -I=0 -o=json '[.architectures[]."build-on"]' "$yaml_path")"
            architectures="$(yq -r -I=0 -o=csv '[.architectures[]."build-on"]' "$yaml_path" | tr ',' ' ')"
        fi

        echo "architectures_list=$architectures_list" >> "$GITHUB_OUTPUT"
        echo "architectures=$architectures" >> "$GITHUB_OUTPUT"
